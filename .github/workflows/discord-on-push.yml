name: discord-on-push
on:
  push:
    branches: [main, master]

env:
  WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Post changelog to Discord (curl, robust)
        shell: bash
        env:
          REPO: ${{ github.repository }}
          BRANCH: ${{ github.ref_name }}
          ACTOR: ${{ github.actor }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}
          COMPARE: ${{ github.event.compare }}
        run: |
          # Build JSON in Python (safe escaping), send with curl (avoids CF 1010)
          json_payload=$(python3 - <<'PY'
          import os, json
          import pathlib
          evt_path = os.environ["GITHUB_EVENT_PATH"]
          evt = json.loads(pathlib.Path(evt_path).read_text(encoding="utf-8"))

          repo   = os.environ.get("REPO","")
          branch = os.environ.get("BRANCH","")
          actor  = os.environ.get("ACTOR","")
          compare= os.environ.get("COMPARE","")

          head = evt.get("head_commit") or {}
          head_msg = (head.get("message") or "").splitlines()[0]
          head_url = head.get("url","")
          head_sha = (head.get("id","") or "")[:7]

          commits=[]
          for c in (evt.get("commits") or [])[:10]:
              sha=(c.get("id","") or "")[:7]
              url=c.get("url","")
              msg=(c.get("message") or "").splitlines()[0].replace("\r","")
              commits.append(f"* [`{sha}`]({url}) — {msg}")
          if not commits:
              commits=["(no commit messages)"]

          title = f"Pushed to {repo}: {branch}"
          desc  = f"**{head_msg or '(no head commit message)'}**"
          if head_sha and head_url:
              desc += f"\n\n[`{head_sha}` commit]({head_url})"
          if compare:
              desc += f" · [Compare]({compare})"
          desc += "\n\n" + "\n".join(commits)

          payload = {
            "username": "git changes",
            "embeds": [{
              "title": title,
              "description": desc,
              "color": 5814783,
              "footer": {"text": f"by {actor}"}
            }]
          }
          print(json.dumps(payload))
          PY
          )

          # Send to Discord; ?wait=true returns 200 and helps debugging
          curl -fsS -A "GitHubActions/1.0" \
               -H "Content-Type: application/json" \
               -d "$json_payload" \
               "$WEBHOOK?wait=true"
