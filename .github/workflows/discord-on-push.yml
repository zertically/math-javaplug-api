name: discord-on-push
on:
  push:
    branches: [main, master]

env:
  WEBHOOK: "https://discord.com/api/webhooks/1416558305018642605/0BetUqMb6nz0j_PeeIBxjF8Sfc761iMMc4oLe3RBKJJz_mOYzfYyoYPXWYfwVjDBxpBD"

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Send pretty embed with commit info
        env:
          REPO: ${{ github.repository }}
          BRANCH: ${{ github.ref_name }}
          ACTOR: ${{ github.actor }}
          COMPARE: ${{ github.event.compare }}
          EVENT_PATH: ${{ github.event_path }}
        run: |
          python3 - <<'PY'
          import os, json, urllib.request

          url = os.environ["WEBHOOK"]
          if "?" not in url: url += "?wait=true"

          # GitHub event payload path
          with open(os.environ["EVENT_PATH"], "r", encoding="utf-8") as f:
              evt = json.load(f)

          repo   = os.environ["REPO"]
          branch = os.environ["BRANCH"]
          actor  = os.environ["ACTOR"]
          compare= os.environ.get("COMPARE","")

          head    = evt.get("head_commit") or {}
          head_msg= (head.get("message") or "").splitlines()[0]
          head_url= head.get("url","")
          head_sha= (head.get("id","") or "")[:7]

          # Build up to 10 commit bullets
          commits=[]
          for c in evt.get("commits", [])[:10]:
              sha=(c.get("id","") or "")[:7]
              urlc=c.get("url","")
              msg=(c.get("message") or "").splitlines()[0].replace("\r","")
              commits.append(f"* [`{sha}`]({urlc}) — {msg}")
          if not commits:
              commits=["(no commit messages)"]
          commit_list="\n".join(commits)

          title = f"Pushed to {repo}: {branch}"
          desc  = f"**{head_msg or '(no head commit message)'}**"
          if head_sha and head_url:
              desc += f"\n\n[`{head_sha}` commit]({head_url})"
          if compare:
              desc += f" · [Compare]({compare})"
          desc += f"\n\n{commit_list}"

          payload = {
            "username": "git changes",
            "embeds": [{
              "title": title,
              "description": desc,
              "color": 5814783,
              "footer": {"text": f"by {actor}"}
            }]
          }

          data=json.dumps(payload).encode("utf-8")
          req=urllib.request.Request(url, data=data, headers={"Content-Type":"application/json"})
          with urllib.request.urlopen(req) as r:
              print("Discord status:", r.status)
          PY
